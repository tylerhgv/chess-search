# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\window.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from chessSearch import *


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(640, 800)
        MainWindow.setStyleSheet("background-color: rgb(255, 255, 255)")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 620, 739))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_21 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        font = QtGui.QFont()
        font.setFamily("Lucida Sans")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_21.setFont(font)
        self.label_21.setStyleSheet("border: 1px solid grey")
        self.label_21.setAlignment(QtCore.Qt.AlignCenter)
        self.label_21.setObjectName("label_21")
        self.verticalLayout.addWidget(self.label_21)
        self.widget = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        self.widget.setObjectName("widget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout_2.setContentsMargins(-1, -1, -1, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.pushButton_2 = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_2.sizePolicy().hasHeightForWidth())
        self.pushButton_2.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Lucida Sans")
        font.setPointSize(9)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setCheckable(True)
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout_2.addWidget(self.pushButton_2)
        self.pushButton_3 = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_3.sizePolicy().hasHeightForWidth())
        self.pushButton_3.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Lucida Sans")
        font.setPointSize(9)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setCheckable(True)
        self.pushButton_3.setObjectName("pushButton_3")
        self.horizontalLayout_2.addWidget(self.pushButton_3)
        self.verticalLayout.addWidget(self.widget)
        self.widget_2 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        self.widget_2.setObjectName("widget_2")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.widget_2)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.lineEdit = QtWidgets.QLineEdit(self.widget_2)
        font = QtGui.QFont()
        font.setFamily("Lucida Sans")
        font.setPointSize(9)
        self.lineEdit.setFont(font)
        self.lineEdit.setToolTip("")
        self.lineEdit.setStyleSheet("border: 1px solid rosybrown")
        self.lineEdit.setObjectName("lineEdit")
        self.horizontalLayout_3.addWidget(self.lineEdit)
        self.pushButton = QtWidgets.QPushButton(self.widget_2)
        font = QtGui.QFont()
        font.setFamily("Lucida Sans")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout_3.addWidget(self.pushButton)
        self.verticalLayout.addWidget(self.widget_2)
        self.label_38 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        font = QtGui.QFont()
        font.setFamily("Lucida Sans Unicode")
        self.label_38.setFont(font)
        self.label_38.setObjectName("label_38")
        self.verticalLayout.addWidget(self.label_38)
        self.scrollArea_2 = QtWidgets.QScrollArea(self.scrollAreaWidgetContents)
        self.scrollArea_2.setWidgetResizable(True)
        self.scrollArea_2.setObjectName("scrollArea_2")
        self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, -70, 583, 645))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollAreaWidgetContents_2.sizePolicy().hasHeightForWidth())
        self.scrollAreaWidgetContents_2.setSizePolicy(sizePolicy)
        self.scrollAreaWidgetContents_2.setStyleSheet("")
        self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents_2)
        self.verticalLayout_3.setSpacing(18)
        self.verticalLayout_3.setObjectName("verticalLayout_3")

        self.scrollArea_2.setWidget(self.scrollAreaWidgetContents_2)
        self.verticalLayout.addWidget(self.scrollArea_2)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.verticalLayout_2.addWidget(self.scrollArea)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 640, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.mode = 0

        # Add event handlers to buttons & text box
        self.pushButton_2.clicked.connect(self.set_mode_2)
        self.pushButton_3.clicked.connect(self.set_mode_3)
        self.lineEdit.returnPressed.connect(self.read_input)
        self.pushButton.clicked.connect(self.read_input)
        # Set default search mode
        self.set_mode_2()

        # Load docs
        nltk.download('punkt')
        print('[INFO] Loading documents database...', end='')
        with open('data/docs.json', 'r') as infile:
            self.docs = ujson.load(infile)
        print(f'DONE')

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_21.setText(_translate("MainWindow", "Chess Search Engine"))
        self.pushButton_2.setText(_translate("MainWindow", "Search by Opening Name"))
        self.pushButton_3.setText(_translate("MainWindow", "Search by Opening Moves"))
        self.lineEdit.setPlaceholderText(_translate("MainWindow", "Enter search query here"))
        self.pushButton.setText(_translate("MainWindow", "Search"))
        # self.label_38.setText(_translate("MainWindow", "Total results: 20 docs. Elapsed time: 1.5s"))
        # self.label_34.setText(_translate("MainWindow", "Game #1: Rated Classical Game (2012.12.31)"))
        # self.label_35.setText(_translate("MainWindow", "White: BFG9k (1639)  |  Black: mamalak (1403)  |  Result: 1-0"))
        # self.label_36.setText(_translate("MainWindow", "Opening: 1. e4 e6 2. d4 b6 3. a3 Bb7  |  French Defense: Normal Variation"))
        # self.label_37.setText(_translate("MainWindow", "Link to Game: https://lichess.org/j1dkb5dw"))

    def set_mode_2(self):
        print(f'[INFO] Changing to search mode 0 - Search by name')
        self.pushButton_2.setChecked(True)
        self.pushButton_3.setChecked(False)
        self.mode = 0

    def set_mode_3(self):
        print(f'[INFO] Changing to search mode 1 - Search by moves')
        self.pushButton_3.setChecked(True)
        self.pushButton_2.setChecked(False)
        self.mode = 1

    def read_input(self):
        query = self.lineEdit.text()

        # Check for search mode
        if self.mode == 0:
            print(f'[INFO] Selected mode: Search by name')

            # Query by name
            t_start = time.perf_counter()
            res = read_query_name(query)
            print(f'[INFO] Complete result list: {res}')
            i = 1
            for index in res:
                print(f'[OUT] ({i}) GAME #{index}: {self.docs[str(index)]["openingName"]}')
                i += 1

            # Print results and end processing
            t_elapsed = round(time.perf_counter() - t_start, 2)
            print(f'[INFO] Elapsed time: {t_elapsed}s')
            self.print_results(res, t_elapsed)

        elif self.mode == 1:
            print(f'[INFO] Selected mode: Search by moves')

            # Query by move
            t_start = time.perf_counter()
            res = read_query_move(query)
            print(f'[INFO] Complete result list: {res}')
            i = 1
            for doc_id in res:
                print(f'[OUT] ({i}) GAME #{doc_id}: {self.docs[str(doc_id)]["openingMoves"]}')
                i += 1

            # Print results and end processing
            t_elapsed = round(time.perf_counter() - t_start, 2)
            print(f'[INFO] Elapsed time: {t_elapsed}s')
            self.print_results(res, t_elapsed)

    def print_results(self, results, t):
        print('[INFO] Printing results...', end='')

        # Clean layout of old results
        for i in reversed(range(self.verticalLayout_3.count())):
            self.verticalLayout_3.itemAt(i).widget().setParent(None)

        # Print elapsed time
        elapsed_time = f'Retrieved: {len(results)} docs. Elapsed time: {t}s.'
        self.label_38.setText(elapsed_time)

        # Print result cards
        n = 0
        for index in results:
            n += 1
            # Create widgets for new results
            result_widget = QtWidgets.QWidget(self.scrollAreaWidgetContents_2)
            result_widget.setStyleSheet("background-color: linen")
            result_widget.setObjectName("result_widget")
            result_layout = QtWidgets.QVBoxLayout(result_widget)
            result_layout.setSpacing(0)
            result_layout.setObjectName("result_layout")
            label_title = QtWidgets.QLabel(result_widget)
            font = QtGui.QFont()
            font.setFamily("Lucida Sans")
            font.setPointSize(11)
            font.setBold(True)
            font.setWeight(75)
            label_title.setFont(font)
            label_title.setStyleSheet("margin-bottom: 5")
            label_title.setWordWrap(True)
            label_title.setTextInteractionFlags(QtCore.Qt.TextSelectableByMouse)
            label_title.setObjectName("label_title")
            result_layout.addWidget(label_title)
            label_players = QtWidgets.QLabel(result_widget)
            font = QtGui.QFont()
            font.setFamily("Lucida Sans")
            font.setPointSize(8)
            font.setBold(False)
            font.setWeight(50)
            label_players.setFont(font)
            label_players.setWordWrap(False)
            label_players.setTextInteractionFlags(QtCore.Qt.TextSelectableByMouse)
            label_players.setObjectName("label_players")
            result_layout.addWidget(label_players)
            label_opening = QtWidgets.QLabel(result_widget)
            font = QtGui.QFont()
            font.setFamily("Lucida Sans")
            font.setPointSize(8)
            font.setBold(True)
            font.setWeight(75)
            label_opening.setFont(font)
            label_opening.setWordWrap(True)
            label_opening.setTextInteractionFlags(QtCore.Qt.TextSelectableByMouse)
            label_opening.setObjectName("label_opening")
            result_layout.addWidget(label_opening)
            label_link = QtWidgets.QLabel(result_widget)
            font = QtGui.QFont()
            font.setFamily("Lucida Sans")
            font.setPointSize(8)
            font.setBold(False)
            font.setWeight(50)
            label_link.setFont(font)
            label_link.setWordWrap(False)
            label_link.setTextInteractionFlags(QtCore.Qt.TextSelectableByMouse)
            label_link.setObjectName("label_link")
            result_layout.addWidget(label_link)
            self.verticalLayout_3.addWidget(result_widget)

            # Set text for labels
            entry = self.docs[str(index)]
            title = f'[{n}] Game #{index}: {entry["event"]}'
            players = f'White: {entry["white"]}  |  Black: {entry["black"]}  |  Result: {entry["result"]}'
            opening = f'Opening: {entry["openingMoves"]}  |  {entry["openingName"]}'
            link = f'Link to Game: {entry["link"]}'
            label_title.setText(title)
            label_players.setText(players)
            label_opening.setText(opening)
            label_link.setText(link)

        print('DONE')
